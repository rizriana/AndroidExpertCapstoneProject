plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
}

apply from: '../shared_dependencies.gradle'

def STRING = 'String'
def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField(STRING, "API_KEY", "\"" + localProperties['API_KEY'] + "\"")
            buildConfigField(STRING, "BASE_URL", "\"" + localProperties['BASE_URL'] + "\"")
            buildConfigField(STRING, "IMAGE_URL", "\"" + localProperties['IMAGE_URL'] + "\"")
            buildConfigField(STRING, "CERT_URL", "\"" + localProperties['CERT_URL'] + "\"")
            buildConfigField(STRING, "CERT_PINNING0", "\"" + localProperties['CERT_PINNING0'] + "\"")
            buildConfigField(STRING, "CERT_PINNING1", "\"" + localProperties['CERT_PINNING1'] + "\"")
        }
        debug {
            initWith release
            debuggable true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"
    implementation "androidx.room:room-ktx:$room_version"
    api "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Sql Cipher
    implementation "net.zetetic:android-database-sqlcipher:$sql_cipher"
    implementation "androidx.sqlite:sqlite-ktx:$sqlite"

}